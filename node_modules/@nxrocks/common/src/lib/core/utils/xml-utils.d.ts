import { XMLBuilder } from 'xmlbuilder2/lib/interfaces';
import { SelectedValue } from 'xpath';
export declare class XmlBuilder {
    private xmlBuilder;
    constructor(xmlBuilder: XMLBuilder);
    addNode(node: string, content?: string, attributes?: {
        [key: string]: any;
    }): XMLBuilder;
    build(): XMLBuilder;
}
export declare function readXml(xmlContent: string, ignoreNamespace?: boolean): XMLBuilder;
export declare function findXmlNodes(xml: XMLBuilder, xpath: string, ignoreNamespace?: boolean): SelectedValue[];
export declare function findXmlNode(xml: XMLBuilder, xpath: string, ignoreNamespace?: boolean): SelectedValue | undefined;
export declare function findXmlNodeContent(xml: XMLBuilder, xpath: string, ignoreNamespace?: boolean): string | undefined;
export declare function findXmlMatching(xml: XMLBuilder, xpath: string, ignoreNamespace?: boolean): XMLBuilder;
export declare function newXmlNode(content: {
    [key: string]: any;
} | string): XMLBuilder;
export declare function addXmlNode(target: XMLBuilder, node: {
    [key: string]: any;
} | string): XMLBuilder;
export declare function addXmlElement(target: XMLBuilder, ...elements: (string | {
    name: string;
    attributes?: {
        [key: string]: any;
    };
})[]): XMLBuilder;
