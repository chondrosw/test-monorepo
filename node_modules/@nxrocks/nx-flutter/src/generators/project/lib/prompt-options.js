"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.promptAdditionalOptions = void 0;
const tslib_1 = require("tslib");
const inquirer = require("inquirer");
function createPrompt(options) {
    return inquirer.prompt([{
            when: ['app', 'plugin'].indexOf(options.template) !== -1,
            name: 'platforms',
            type: 'checkbox',
            choices: [
                {
                    value: "android",
                    name: "Android platform",
                    checked: true,
                },
                {
                    value: "ios",
                    name: "iOS platform",
                    checked: true,
                },
                {
                    value: "linux",
                    name: "Linux platform",
                    checked: true,
                },
                {
                    value: "windows",
                    name: "Windows platform",
                    checked: true,
                },
                {
                    value: "macos",
                    name: "MacOS platform",
                    checked: true,
                },
                {
                    value: "web",
                    name: "Web platform",
                    checked: true,
                }
            ],
            validate: (platforms) => {
                return (platforms === null || platforms === void 0 ? void 0 : platforms.length) ? true : 'You must select at least one platform';
            },
            message: 'Which platforms would you like to use?'
        },
        {
            when: (response) => { var _a; return ((_a = response.platforms) === null || _a === void 0 ? void 0 : _a.indexOf('android')) !== -1; },
            name: 'androidLanguage',
            type: 'list',
            default: 'kotlin',
            choices: [
                {
                    value: "java",
                    name: "Java"
                },
                {
                    value: "kotlin",
                    name: "Kotlin"
                }
            ],
            message: "Which Android language would you like to use?",
        },
        {
            when: (response) => { var _a; return ((_a = response.platforms) === null || _a === void 0 ? void 0 : _a.indexOf('ios')) !== -1; },
            name: 'iosLanguage',
            type: 'list',
            default: 'swift',
            choices: [
                {
                    value: "objc",
                    name: "Objective-C"
                },
                {
                    value: "swift",
                    name: "Swift"
                }
            ],
            message: "Which iOS language would you like to use?",
        }
    ]);
}
function promptAdditionalOptions(tree, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const answers = yield createPrompt(options);
        options.platforms = answers === null || answers === void 0 ? void 0 : answers.platforms;
        options.androidLanguage = answers === null || answers === void 0 ? void 0 : answers.androidLanguage;
        options.iosLanguage = answers === null || answers === void 0 ? void 0 : answers.iosLanguage;
    });
}
exports.promptAdditionalOptions = promptAdditionalOptions;
//# sourceMappingURL=prompt-options.js.map